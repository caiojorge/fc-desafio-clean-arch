services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network  

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my-network   

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    depends_on:
      - mysql
    ports:
      - "8282:8080"
    networks:
      - my-network    

  app:
    build: .
    container_name: order-system
    restart: always
    depends_on:
      - mysql
      - rabbitmq
    ports:
      - "8000:8000"   # Web Server
      - "50051:50051" # gRPC Server
      - "8080:8080"   # GraphQL Server
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=orders
      - DB_DRIVER=mysql
      - WEB_SERVER_PORT=8000
      - GRPC_SERVER_PORT=50051
      - GRAPHQL_SERVER_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    networks:
      - my-network
    # healthcheck:
    #   test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/orders"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s    

networks:
  my-network:
   driver: bridge    